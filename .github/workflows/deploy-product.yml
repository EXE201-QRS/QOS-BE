name: Deploy to Production

on:
  workflow_run:
    workflows: ['Build and Publish Docker Image']
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Tạo thư mục app nếu chưa tồn tại
            mkdir -p ~/qos-api

            # Di chuyển vào thư mục ứng dụng
            cd ~/qos-api

            # Kiểm tra nếu file docker-compose.yml không tồn tại, tạo file mới
            if [ ! -f docker-compose.yml ]; then
              cat > docker-compose.yml << 'EOL'
            services:
              qos-api:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/qos-api:latest
                ports:
                  - "4000:4000"
                restart: always
                env_file:
                  - .env
            EOL
            fi

            # Tạo file .env từ secret
            echo "${{ secrets.ENV_PRODUCTION }}" | base64 -d > .env

            # Dừng container hiện tại nếu có
            docker compose down || true

            # Pull image mới nhất
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/qos-api:latest

            # Khởi động lại ứng dụng
            docker compose up -d

            # Hiển thị logs
            docker compose logs --tail=20 qos-api

            # Hiển thị container status
            docker ps -a | grep qos-api
